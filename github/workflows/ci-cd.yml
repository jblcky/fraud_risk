name: CI/CD Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        run: pytest tests/

      - name: Lint code
        run: |
          pip install flake8
          flake8 src/

  docker-build-push:
    runs-on: ubuntu-latest
    needs: build-test   # only run if tests pass

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to DockerHub
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      - name: Build Docker image
        run: docker build -t mydockerhubuser/myproject:${{ github.sha }} .

      - name: Push Docker image
        run: |
          docker push mydockerhubuser/myproject:${{ github.sha }}
          docker tag mydockerhubuser/myproject:${{ github.sha }} mydockerhubuser/myproject:latest
          docker push mydockerhubuser/myproject:latest

  deploy-k8s:
    runs-on: ubuntu-latest
    needs: docker-build-push

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Configure K8s access
        run: |
          mkdir -p $HOME/.kube
          echo "${{ secrets.KUBECONFIG_CONTENT }}" > $HOME/.kube/config

      - name: Deploy to Kubernetes
        run: |
          kubectl set image deployment/my-deployment my-container=mydockerhubuser/myproject:${{ github.sha }}
          kubectl rollout status deployment/my-deployment
